version: '3.1'

services:

  db:
    container_name: postgresql
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database
    ports:
      - 5432:5432

  flask:
    container_name: flask
    build: .
    ports:
      - 5000:5000
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/database
      FLASK_ENV: docker
    depends_on:
      - db
    links:
      - db
  
  minio1:
    image: minio/minio:RELEASE.2019-03-13T21-59-47Z
    volumes:
    - data1:/data
    ports:
    - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
    logging:
      driver: none
  minio2:
    image: minio/minio:RELEASE.2019-03-13T21-59-47Z
    volumes:
    - data2:/data
    ports:
    - "9002:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
    logging:
      driver: none
  minio3:
    image: minio/minio:RELEASE.2019-03-13T21-59-47Z
    volumes:
    - data3:/data
    ports:
    - "9003:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data
    logging:
      driver: none
  minio4:
    image: minio/minio:RELEASE.2019-03-13T21-59-47Z
    volumes:
    - data4:/data
    ports:
    - "9004:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data 
    logging:
      driver: none

volumes:
  data1:
  data2:
  data3:
  data4: